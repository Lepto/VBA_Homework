Sub StockSummary() 'Set an initial variable for ticker, open price, closing price, and volume of traded stock  Dim StockName As String  Dim Volume As Double  Dim OpenPrice As Double  Dim ClosingPrice As Double  Dim PercentChange As Double  Dim YearChange As Double  Dim Summary_Table_Row As Long    'Set Worksheet variable  Dim ws As Worksheet     'Keep track of the location for each stock in the summary table   Summary_Table_Row = 2'Loop through each worksheetFor Each ws In ThisWorkbook.Worksheets ws.Activate  'Set headers ws.Cells(1, 9).Value = "Stock Name" ws.Cells(1, 10).Value = "Yearly Change" ws.Cells(1, 11).Value = "Percent Change" ws.Cells(1, 12).Value = "Total Stock Volume" Columns(9).AutoFit 'Formatting column width Columns(10).AutoFit 'Formatting column width Columns(11).AutoFit 'Formatting column width Columns(12).AutoFit 'Formatting column width Columns(10).NumberFormat = "$#,##0.00" 'Formatting number in column    'Count of last row for each worksheet  LastRow = ws.Cells(Rows.Count, 1).End(xlUp).Row    'Set YearChange in stock        OpenPrice = ws.Cells(2, 3).Value    'Loop through all stocks  For i = 2 To LastRow       'Calculating the Stock volume based on previous Stock Volume value     Volume = Volume + ws.Cells(i, 7).Value            'Check if we are still within the same StockName, if it is not...    If ws.Cells(i + 1, 1).Value <> ws.Cells(i, 1).Value Then        'Set the StockName Variable        StockName = ws.Cells(i, 1).Value            'Setting ClosingPrice values based on next row        ClosingPrice = ws.Cells(i, 6).Value             'Calculating the change in stock price for the year        YearChange = ClosingPrice - OpenPrice                'Calculating the Stock volume based on previous Stock Volume value        'Volume = Volume + ws.Cells(i, 7).Value                           'Validating that the OpenPrice value isn't zero to avoid undefined error     If OpenPrice <> 0 Then             'Calculating Percent change in stock price        PercentChange = ((ClosingPrice - OpenPrice) / OpenPrice)         'Set YearChange in stock        OpenPrice = ws.Cells(i + 1, 3).Value             Else             'Setting value to percentage        PercentChange = ClosingPrice * 100                Volume = Volume + ws.Cells(i, 7).Value                     End If             'Display the StockName in the Summary Table        ws.Cells(Summary_Table_Row, 9).Value = StockName              'Display the change in opening price and closing price in Summary Table        ws.Cells(Summary_Table_Row, 10).Value = YearChange              'Display the percent change in stock price in Summaru Table        ws.Cells(Summary_Table_Row, 11).Value = PercentChange        'Display the Total Stock Volume to the Summary Table        ws.Cells(Summary_Table_Row, 12).Value = Volume        'Conditioning column for percent change        If PercentChange >= 0 Then            'Change interior color of cell to green if equal or greater than zero        ws.Cells(Summary_Table_Row, 10).Interior.ColorIndex = 4    Else                'Change interior color of cell to red if less than zero        ws.Cells(Summary_Table_Row, 10).Interior.ColorIndex = 3     End If             'Add one to the summary table row        Summary_Table_Row = Summary_Table_Row + 1            'Reset the Stock Volume      Volume = 0        Else                End If  Next i    'Setting percent number format    ws.Columns("K").NumberFormat = "0.00%"              'Resetting values    Summary_Table_Row = 2    Volume = 0    PercentChange = 0'BONUS PART OF HOMEWORKDim Max As DoubleDim BestStock As StringDim Min As DoubleDim WorstStock As StringDim MostVolume As DoubleDim MostStock As String'Counting last row of summary tableSummaryLastRow = ws.Cells(Rows.Count, 9).End(xlUp).RowFor j = 2 To SummaryLastRow    'Finding the best percent change by comparing each cell to the previous cell in column 11    If ws.Cells(j, 11).Value > Max Then        Max = ws.Cells(j, 11).Value        BestStock = ws.Cells(j, 9).Value    End If    'Finding the worst percent change by comparing each cell to the previous cell in column 11    If ws.Cells(j, 11).Value < Min Then        Min = ws.Cells(j, 11).Value        WorstStock = ws.Cells(j, 9).Value    End If        'Finding the most traded volume by comparing each cell to the previous cell in column 12    If ws.Cells(j, 12).Value > MostVolume Then        MostVolume = ws.Cells(j, 12).Value        MostStock = ws.Cells(j, 9).Value    End If        Next j        'Display values in appropriate summary table    ws.Cells(2, 15).Value = BestStock    ws.Cells(2, 16).Value = Max    ws.Cells(3, 15).Value = WorstStock    ws.Cells(3, 16).Value = Min    ws.Cells(4, 15).Value = MostStock    ws.Cells(4, 16).Value = MostVolume    'Headers for bonus summary tablews.Cells(1, 15).Value = "Ticker"ws.Cells(1, 16).Value = "Value"ws.Cells(2, 14).Value = "Greatest % Increase"ws.Cells(3, 14).Value = "Greatest % Decrease"ws.Cells(4, 14).Value = "Greatest Total Volume"'Formatting column widthColumns(14).AutoFitColumns(15).AutoFitColumns(16).AutoFit 'Formatting numbers in secondary summary table ws.Cells(2, 16).NumberFormat = "0.00%" ws.Cells(3, 16).NumberFormat = "0.00%"         Next wsEnd Sub